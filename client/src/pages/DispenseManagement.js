import React, { useEffect, useState } from 'react'
import '../App.css'

const API = {
  getLookup:    () => fetch('/api/lookup').then(r=>r.json()),
  addQueue:     (payload) => fetch('/api/queues', {method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(payload)}).then(r=>r.json()),
  addPatient:   (payload) => fetch('/api/patients', {method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(payload)}).then(r=>r.json()),
}

export default function DispenseManagement(){
  const [lookup, setLookup] = useState({patients:[], pills:[]})
  const [patient, setPatient] = useState('')
  const [pill, setPill] = useState('')
  const [qty, setQty] = useState(1)
  const [items, setItems] = useState([])
  const [msg, setMsg] = useState('')
  const [loading, setLoading] = useState(true)

  useEffect(()=>{
    let mounted = true
    setLoading(true)
    API.getLookup().then(data=>{
      console.log('lookup:', data)
      if(!mounted) return
      setLookup(data || {patients:[],pills:[]})
      if(data && data.pills && data.pills.length) setPill(String(data.pills[0].id))
      if(data && data.patients && data.patients.length) setPatient(String(data.patients[0].id))
    }).catch(err=>{
      console.error('Failed to fetch lookup', err)
      setMsg('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')
    }).finally(()=>{ if(mounted) setLoading(false) })
    return ()=>{ mounted = false }
  },[])

  function addItem(){
    const p = lookup.pills.find(x=>String(x.id)===String(pill))
    if(!p) return setMsg('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤‡∏Å‡πà‡∏≠‡∏ô')
    const q = p.type==='liquid'?1:Math.max(1,parseInt(qty)||1)
    setItems(prev=>[...prev,{pill_id:p.id, name:p.name, type:p.type, quantity:q}])
  }

  function submit(){
    if(!patient) return setMsg('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢')
    if(!items || items.length===0) return setMsg('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏≤‡∏Å‡πà‡∏≠‡∏ô')
    API.addQueue({patient_id:parseInt(patient), items}).then(r=>{
      if(r && r.error){
        setMsg('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: '+r.error)
      } else {
        setMsg('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß: '+(r.queue_number||r.queue_id))
        setItems([])
      }
    }).catch(e=>{
      console.error(e)
      setMsg('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
    })
  }

  return (
    <div className="container">
      <div className="header">
        <div className="header-left">
          <div className="brand">
            <div className="logo">SD</div>
            <div>
              <h1>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏ß & ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏¢‡∏≤</h1>
              <div className="subtitle">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡∏∞‡∏™‡∏±‡πà‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏¢‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</div>
            </div>
          </div>
        </div>
        <div className="nav">
          <div className="stickers-row">
            <div className="sticker-badge"><span className="emoji">üíä</span><span className="text">‡∏ï‡∏π‡πâ‡∏¢‡∏≤</span></div>
            <div className="sticker-badge"><span className="emoji">ü©∫</span><span className="text">‡πÅ‡∏ú‡∏ô‡∏Å</span></div>
          </div>
        </div>
      </div>

      <div className="card">
        <div className="card-header">
          <div>
            <div className="card-title">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏¢‡∏≤</div>
            <div className="card-sub">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢</div>
          </div>
        </div>

        <div className="row">
          <label>‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</label>
          <select value={patient} onChange={e=>setPatient(e.target.value)}>
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>
            {lookup.patients.map(p=> <option key={p.id} value={String(p.id)}>{p.name}</option>)}
          </select>
        </div>

        <div className="row" style={{marginTop:8}}>
          <label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤</label>
          <select value={pill} onChange={e=>setPill(e.target.value)}>
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>
            {lookup.pills.map(p=> <option key={p.id} value={String(p.id)}>{p.name}</option>)}
          </select>
          <input className="qty" type="number" min="1" value={qty} onChange={e=>setQty(e.target.value)} />
          <button className="btn" onClick={addItem}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</button>
        </div>
      </div>

      <div className="card">
        <div className="card-header">
          <div>
            <div className="card-title">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏≤</div>
            <div className="card-sub">‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</div>
          </div>
        </div>
        <table>
          <thead>
            <tr><th>‡∏¢‡∏≤</th><th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th><th className="right">‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠</th><th className="right">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢</th><th>‡∏•‡∏ö</th></tr>
          </thead>
          <tbody>
            {items.map((it,idx)=> (
              <tr key={idx}>
                <td>{it.name}</td>
                <td>{it.type}</td>
                <td className="right">-</td>
                <td className="right">{it.quantity}</td>
                <td><button className="btn secondary" onClick={()=>setItems(items.filter((_,i)=>i!==idx))}>‡∏•‡∏ö</button></td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className="card">
        <div className="card-header">
          <div>
            <div className="card-title">‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</div>
            <div className="card-sub">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>
          </div>
        </div>
        <div className="row" style={{justifyContent:'space-between', alignItems:'center'}}>
          <div>
            <button className="btn" onClick={submit}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏¥‡∏ß</button>
            <button className="btn secondary" style={{marginLeft:8}} onClick={()=>{setItems([]); setMsg('')}}>‡∏•‡πâ‡∏≤‡∏á</button>
          </div>
          <div className="muted">{msg}</div>
        </div>
      </div>
    </div>
  )
}
